package min.point.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import min.point.dao.PointDAO;
import min.point.dto.PointHistoryDTO;
import min.point.dto.RefundRequestDTO;

@Service
public class PointService {
	
	@Autowired
	PointDAO pointdao;
	
	public List<Object> getBuyHistory(){
		List<Object>list = pointdao.getBuyHistory();
		return list;
	}
	public List<Object> getSellHistory(){
		List<Object>list = pointdao.getSellHistory();
		return list;
	}
	public List<Object> getCRHistory(){
		List<Object>list = pointdao.getCRHistory();
		return list;
	}

	public List<Object> getPointHistory(String id) {
		// TODO Auto-generated method stub
		System.out.println(id);
		List<Object>list = pointdao.getPointHistory(id);
		System.out.println(list);
		return list;
	}

	public List<Object> getRefundRequestList() {
		// TODO Auto-generated method stub
		List<Object>list = pointdao.getRefundRequestList();
		return list;
	}

	public void pointCharge(String id, double dealing_point) {
		// TODO Auto-generated method stub
		int point_before = pointdao.getPoint(id);
		Map<String, Object> map = new HashMap<String, Object>();
		String why = "충전";
		map.put("id", id);
		map.put("dealing_point", dealing_point);
		map.put("point_before", point_before);
		map.put("why", why);
		pointdao.pointChange(map);
		pointdao.updateCR(map);
		//id랑 dealingpoint를 맵에넣어서 dao에 넘겨준다.
		//pointChange는 더블값을 받아서 포인트 추가 혹은 삭감? 해주는 dao 메서드
		
		//바뀐 포인트 세션에 넣어줘야 되는 부분?
		
		
		
		
	}

	public void pointExchange(String buyer, String seller, double dealing_point) {
		// TODO Auto-generated method stub
		int buyer_point = pointdao.getPoint(buyer);
		int seller_point = pointdao.getPoint(seller);
		
		PointHistoryDTO buyerPointHistoryDTO = new PointHistoryDTO();
		buyerPointHistoryDTO.setId(buyer);
		buyerPointHistoryDTO.setDealing_point(-dealing_point);
		buyerPointHistoryDTO.setOpponent(seller);
		buyerPointHistoryDTO.setPoint_before(buyer_point);
		pointdao.insertBuyHistory(buyerPointHistoryDTO);
		//구매 내역 여주고
		PointHistoryDTO sellerPointHistoryDTO = new PointHistoryDTO();
		sellerPointHistoryDTO.setId(seller);
		sellerPointHistoryDTO.setDealing_point(dealing_point);
		sellerPointHistoryDTO.setOpponent(buyer);
		sellerPointHistoryDTO.setPoint_before(seller_point);
		pointdao.insertSellHistory(sellerPointHistoryDTO);
		//판매 내역 여주고
		Map<String, Object> bmap = new HashMap<String, Object>();
		bmap.put("id", buyer);
		bmap.put("dealing_point", -dealing_point);
		pointdao.pointChange(bmap);
		//구매자 포인트 수정해주고
		Map<String, Object> smap = new HashMap<String, Object>();
		smap.put("id", seller);
		smap.put("dealing_point", dealing_point);
		pointdao.pointChange(smap);
		//판매자 포인트 수정하고
		
		//킁 수정된 포인트 세션에 여줘야 되나
	}

	public void refundRequest(RefundRequestDTO refundRequestDTO) {
		// TODO Auto-generated method stub
		pointdao.refundRequest(refundRequestDTO);
		
	}

	public void refundRequestCheck(int no, String id, double dealing_point) {
		// TODO Auto-generated method stub
		Map<String, Object>map = new HashMap<>();
		map.put("id", id);
		map.put("dealing_point", -dealing_point);
		pointdao.pointChange(map);
		pointdao.refundRequestCheck(no);
		
	}

	public int getPoint(String id) {
		// TODO Auto-generated method stub
		return pointdao.getPoint(id);
	}

}
