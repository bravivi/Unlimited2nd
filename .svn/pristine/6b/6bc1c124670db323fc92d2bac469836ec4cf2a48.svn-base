package min.point.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import min.point.dto.PointChargeDTO;
import min.point.dto.PointSearching;
import min.point.dto.RefundRequestDTO;
import min.point.service.PointService;

@Controller
@RequestMapping("/point")
public class PointController {
	
	@Autowired
	PointService pointService;
	
	@RequestMapping("/pointMain")
	public String PointMain(@RequestParam(value="id", defaultValue="bravivi") String id, Model model){
		int point = pointService.getPoint(id);
		model.addAttribute("id", id);
		model.addAttribute("point",point);
		return "point/point_main";
	}
	@RequestMapping("/pointAdmin")
	public String PointAdmin(){
		return "point/point_admin";
	}
	
	
	@RequestMapping("/adminHistory")
	public String AdminHistory(){
		return "point/point_admin_history";
		//관리자가 회원들의 포인트내역  구매, 판매, 충환 구분해서 불러오기
	}
	
	@RequestMapping("/getBuyHistory")
	public String GetBuyHistory(Model model, @RequestParam(value="page", defaultValue="1")int page){
		Map<String, Object> map = pointService.getBuyHistory(page);
		model.addAttribute("list",map.get("list"));
		model.addAttribute("paging",map.get("paging"));
		return "point/buy_history";
		//관리자가 회원들의 포인트내역  구매, 판매, 충환 구분해서 불러오기
	}
	@RequestMapping("/getSellHistory")
	public String GetSellHistory(Model model, @RequestParam(value="page", defaultValue="1")int page){
		Map<String, Object> map = pointService.getSellHistory(page);
		model.addAttribute("list",map.get("list"));
		model.addAttribute("paging",map.get("paging"));
		return "point/sell_history";
		//관리자가 회원들의 포인트내역  구매, 판매, 충환 구분해서 불러오기
	}
	@RequestMapping("/getCRHistory")
	public String GetCRHistory(Model model, @RequestParam(value="page", defaultValue="1")int page){
		Map<String, Object> map = pointService.getCRHistory(page);
		model.addAttribute("list",map.get("list"));
		model.addAttribute("paging",map.get("paging"));
		return "point/cr_history";
		//관리자가 회원들의 포인트내역  구매, 판매, 충환 구분해서 불러오기
	}
	
	@RequestMapping("/GetPointHistory")
	public String GetPointHistory(@RequestParam("id") String id, @RequestParam(value="page",defaultValue="1") int page, Model model){
		System.out.println(id);
		Map<String, Object> map = pointService.getPointHistory(page,id);
		model.addAttribute("id",id);
		model.addAttribute("pointHistoryList",map.get("list"));
		model.addAttribute("paging",map.get("paging"));
		return "point/point_history";
		//회원이 자기 id로 충전환전구매판매 내역 보기
	}
	
	@RequestMapping("/getRefundRequestList")
	public String GetRefundRequest(Model model, @RequestParam(value="page", defaultValue="1")int page){
		Map<String, Object> map = pointService.getRefundRequestList(page);
		model.addAttribute("list", map.get("list"));
		model.addAttribute("paging", map.get("paging"));
		return "point/refund_request";
		//모든 환전요청내역을 리스트로 뽑아와서 보기 관리자가
	}
	
	@RequestMapping(value="/pointcharge", method=RequestMethod.GET)
	public String PointChargeForm(){
		return "point/point_charge_form";
	}
	
	@RequestMapping(value="/pointchargeimport", method=RequestMethod.POST)
	public String PointChargeimport(PointChargeDTO pointChargeDTO, Model model){
		model.addAttribute("param",pointChargeDTO);
		return "point/point_charge_import";
	}
	
	@RequestMapping(value="/pointcharge", method=RequestMethod.POST)
	public String PointCharge(@RequestParam(value="id",defaultValue="bravivi") String id, @RequestParam("dealing_point") int dealing_point){
		pointService.pointCharge(id, dealing_point);
		
		return "redirect:point/point_main";
	}
	
	@RequestMapping("/pointExchange")
	public String PointExchange(@RequestParam("buyer") String buyer, @RequestParam("seller") String seller, @RequestParam("dealing_point") double dealing_point){
		pointService.pointExchange(buyer,seller,dealing_point);
		return "재연이 그짝으로";
	}
	
	@RequestMapping(value="/pointRefundRequest", method=RequestMethod.GET)
	public String PointRequestForm(@RequestParam(value="id",defaultValue="bravivi")String id, Model model){
		int point = pointService.getPoint(id);
		model.addAttribute("point",point);
		model.addAttribute("id",id);
		return "point/point_refund_form";
	}


	@RequestMapping(value="/pointRefundRequest", method=RequestMethod.POST)
	public String PointRequest(RefundRequestDTO refundRequestDTO){
		System.out.println(refundRequestDTO);
		pointService.refundRequest(refundRequestDTO);
		return "redirect:pointMain";
	}
	
	@RequestMapping("/pointRefundRequestCheck")
	public String PointRefundRequestCheck(@RequestParam("no") int no, @RequestParam("id")String id ,@RequestParam("dealing_point") double dealing_point){
		pointService.refundRequestCheck(no,id,dealing_point);
		return "redirect:./getRefundRequestList";
	}
	
	@RequestMapping(value="/pointHistorySearch",method=RequestMethod.POST)
	public String PointHistorySearch(@RequestParam(value="page",defaultValue="1") int page, @RequestParam(value="id",defaultValue="kyu") String id, PointSearching pointSearching, Model model){
		System.out.println("ad");
		pointSearching.setId(id);
		System.out.println(pointSearching);
		Map<String, Object> map = pointService.pointHistorySearch(page, pointSearching);
		model.addAttribute("pointHistoryList", map.get("list"));
		model.addAttribute("paging",map.get("paging"));
		model.addAttribute("id",id);
		return "point/point_history";
	}
	
	@RequestMapping(value="buyHistorySearch", method=RequestMethod.POST)
	public String BuyHistorySearch(@RequestParam(value="page",defaultValue="1") int page, PointSearching pointSearching, Model model){
		Map<String, Object> map = pointService.buyHistorySearch(page, pointSearching);
		model.addAttribute("list",map.get("list"));
		model.addAttribute("paging",map.get("paging"));
		return "point/buy_history";
	}
	@RequestMapping(value="sellHistorySearch", method=RequestMethod.POST)
	public String SellHistorySearch(@RequestParam(value="page",defaultValue="1") int page, PointSearching pointSearching, Model model){
		Map<String, Object> map = pointService.sellHistorySearch(page, pointSearching);
		model.addAttribute("list",map.get("list"));
		model.addAttribute("paging",map.get("paging"));
		return "point/buy_history";
	}
	@RequestMapping(value="crHistorySearch", method=RequestMethod.POST)
	public String crHistorySearch(@RequestParam(value="page",defaultValue="1") int page, PointSearching pointSearching, Model model){
//		System.out.println(pointSearching);
		Map<String, Object> map = pointService.crHistorySearch(page, pointSearching);
		model.addAttribute("list",map.get("list"));
		model.addAttribute("paging",map.get("paging"));
		return "point/cr_history";
	}
	
	@RequestMapping(value="refundRequestSearch", method=RequestMethod.POST)
	public String refundRequestSearch(@RequestParam(value="page",defaultValue="1") int page, PointSearching pointSearching, Model model){
//		System.out.println(pointSearching);
		Map<String, Object> map = pointService.refundRequestSearch(page, pointSearching);
		model.addAttribute("list",map.get("list"));
		model.addAttribute("paging",map.get("paging"));
		return "point/refund_request";
	}
	
	
	
	
	
}
